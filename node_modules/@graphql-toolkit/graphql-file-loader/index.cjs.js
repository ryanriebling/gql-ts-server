'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const common = require('@graphql-toolkit/common');
const path = require('path');
const fs = require('fs');

const GQL_EXTENSIONS = ['.gql', '.graphql', '.graphqls'];
class GraphQLFileLoader {
    loaderId() {
        return 'graphql-file';
    }
    async canLoad(pointer, options) {
        if (common.isValidPath(pointer)) {
            const extension = path.extname(pointer).toLowerCase();
            if (GQL_EXTENSIONS.includes(extension)) {
                const normalizedFilePath = path.isAbsolute(pointer) ? pointer : path.resolve(options.cwd || process.cwd(), pointer);
                if (fs.existsSync(normalizedFilePath)) {
                    return true;
                }
            }
        }
        return false;
    }
    async load(pointer, options) {
        const normalizedFilePath = path.isAbsolute(pointer) ? pointer : path.resolve(options.cwd, pointer);
        const rawSDL = fs.readFileSync(normalizedFilePath, 'utf-8').trim();
        return common.parseGraphQLSDL(pointer, rawSDL, options);
    }
}

exports.GraphQLFileLoader = GraphQLFileLoader;
